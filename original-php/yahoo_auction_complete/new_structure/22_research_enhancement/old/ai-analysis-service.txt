    // ウォッチ数と売上の比率
    const watchersCount = productData.ebayWatchersCount || 0;
    if (watchersCount > 0 && soldQuantity > 0) {
      const watchToSalesRatio = watchersCount / soldQuantity;
      if (watchToSalesRatio < 2) {
        riskScore += 1;
        factors.push('Low conversion rate');
      }
    }
    
    return {
      type: 'market',
      score: Math.min(riskScore, 10),
      factors,
      description: '市場環境関連のリスク評価'
    };
  }
  
  assessCounterfeitRisk(productData) {
    let riskScore = 1;
    const factors = [];
    const title = (productData.ebayTitle || '').toLowerCase();
    const brand = (productData.brand || '').toLowerCase();
    const price = productData.ebaySellingPrice || 0;
    
    // 高リスクブランド
    const highRiskBrands = ['apple', 'samsung', 'sony', 'nike', 'adidas', 'louis vuitton', 'gucci'];
    if (highRiskBrands.some(b => brand.includes(b))) {
      riskScore += 3;
      factors.push('High counterfeit risk brand');
    }
    
    // 疑わしいキーワード
    const suspiciousKeywords = ['replica', 'aaa', '1:1', 'mirror', 'unbranded'];
    if (suspiciousKeywords.some(keyword => title.includes(keyword))) {
      riskScore += 4;
      factors.push('Suspicious keywords detected');
    }
    
    // 異常に安い価格
    const brandPrice = this.getExpectedBrandPrice(brand);
    if (brandPrice > 0 && price < brandPrice * 0.3) {
      riskScore += 3;
      factors.push('Suspiciously low price');
    }
    
    return {
      type: 'counterfeit',
      score: Math.min(riskScore, 10),
      probability: Math.min(riskScore / 10, 1),
      factors,
      description: '偽物・模造品リスク評価'
    };
  }
  
  assessRegulatoryRisk(productData) {
    let riskScore = 1;
    const factors = [];
    const category = productData.ebayCategoryName || '';
    const title = (productData.ebayTitle || '').toLowerCase();
    
    // 高規制カテゴリ
    const highRegCategories = ['Health & Beauty', 'Toys & Hobbies', 'Consumer Electronics'];
    if (highRegCategories.some(cat => category.includes(cat))) {
      riskScore += 2;
      factors.push('Regulated category');
    }
    
    // FDA規制対象キーワード
    const fdaKeywords = ['supplement', 'vitamin', 'medical', 'therapeutic', 'drug'];
    if (fdaKeywords.some(keyword => title.includes(keyword))) {
      riskScore += 3;
      factors.push('FDA regulated product');
    }
    
    // バッテリー関連（輸送制限）
    const batteryKeywords = ['battery', 'lithium', 'rechargeable', 'power bank'];
    if (batteryKeywords.some(keyword => title.includes(keyword))) {
      riskScore += 2;
      factors.push('Battery transport restrictions');
    }
    
    return {
      type: 'regulatory',
      score: Math.min(riskScore, 10),
      factors,
      description: '規制・法的リスク評価'
    };
  }
  
  getExpectedBrandPrice(brand) {
    // ブランド別期待価格（USD）
    const brandPrices = {
      'apple': 500,
      'samsung': 300,
      'sony': 200,
      'nike': 100,
      'adidas': 80
    };
    
    return brandPrices[brand.toLowerCase()] || 0;
  }
  
  categorizeRisk(riskScore) {
    if (riskScore >= 8) return 'very_high';
    if (riskScore >= 6) return 'high';
    if (riskScore >= 4) return 'medium';
    if (riskScore >= 2) return 'low';
    return 'very_low';
  }
  
  generateRiskRecommendations(risks) {
    const recommendations = [];
    
    risks.forEach(risk => {
      if (risk.score > 6) {
        switch (risk.type) {
          case 'seller':
            recommendations.push('セラーの評価と過去の取引履歴を詳細に確認してください');
            break;
          case 'product':
            recommendations.push('商品の真正性と品質を慎重に検証してください');
            break;
          case 'market':
            recommendations.push('市場の競争状況を継続的に監視してください');
            break;
          case 'counterfeit':
            recommendations.push('信頼できるサプライヤーからの仕入れを強く推奨します');
            break;
          case 'regulatory':
            recommendations.push('該当する法規制を事前に確認してください');
            break;
        }
      }
    });
    
    if (recommendations.length === 0) {
      recommendations.push('現在のリスクレベルは許容範囲内です');
    }
    
    return recommendations;
  }
  
  getRiskDescription(type, score) {
    const descriptions = {
      market_volatility: {
        high: '価格変動が非常に激しく、予測が困難です',
        medium: '適度な価格変動が見られます',
        low: '価格は比較的安定しています'
      },
      competition: {
        high: '競合が多く、価格競争が激化しています',
        medium: '適度な競合環境です',
        low: '競合が少なく、参入機会があります'
      }
    };
    
    const level = score > 0.7 ? 'high' : score > 0.4 ? 'medium' : 'low';
    return descriptions[type]?.[level] || '詳細な分析が必要です';
  }
}

// 商品マッチングモデル
class ProductMatchingModel {
  async match(ebayProduct, options = {}) {
    const matchingResults = {
      amazonMatches: [],
      rakutenMatches: [],
      mercariMatches: [],
      yahooAuctionMatches: [],
      confidence: 0,
      matchingStrategy: 'keyword_based'
    };
    
    // キーワードベースマッチング
    const keywords = this.extractKeywords(ebayProduct.ebayTitle);
    const brand = ebayProduct.brand;
    const modelNumber = this.extractModelNumber(ebayProduct.ebayTitle);
    
    // Amazon検索
    if (!options.excludeAmazon) {
      matchingResults.amazonMatches = await this.searchAmazon(keywords, brand, modelNumber);
    }
    
    // 楽天検索
    if (!options.excludeRakuten) {
      matchingResults.rakutenMatches = await this.searchRakuten(keywords, brand, modelNumber);
    }
    
    // メルカリ検索
    if (!options.excludeMercari) {
      matchingResults.mercariMatches = await this.searchMercari(keywords, brand);
    }
    
    // マッチング信頼度計算
    matchingResults.confidence = this.calculateMatchingConfidence(matchingResults);
    
    return matchingResults;
  }
  
  extractKeywords(title) {
    if (!title) return [];
    
    // 不要な単語を除去
    const stopwords = ['new', 'used', 'authentic', 'genuine', 'original', 'brand', 'oem'];
    const words = title.toLowerCase()
      .replace(/[^\w\s]/g, ' ')
      .split(/\s+/)
      .filter(word => word.length > 2 && !stopwords.includes(word));
    
    // 重要度順にソート（ブランド名、モデル番号を優先）
    return words.slice(0, 10); // 上位10キーワード
  }
  
  extractModelNumber(title) {
    if (!title) return null;
    
    // モデル番号パターン（英数字組み合わせ）
    const patterns = [
      /[A-Z]{2,}\d{2,}/g,  // iPad Pro など
      /\d{3,}[A-Z]+/g,     // 5GHz など
      /[A-Z]\d{3,}/g       // A1234 など
    ];
    
    for (const pattern of patterns) {
      const matches = title.match(pattern);
      if (matches && matches.length > 0) {
        return matches[0];
      }
    }
    
    return null;
  }
  
  async searchAmazon(keywords, brand, modelNumber) {
    // Amazon Product API統合（実装予定）
    // 現在はモックデータを返す
    return [
      {
        asin: 'B08N5WRWNW',
        title: 'Sample Product',
        price: 150.00,
        currency: 'JPY',
        availability: 'in_stock',
        seller: 'Amazon.co.jp',
        matchScore: 0.85,
        matchReasons: ['brand_match', 'keyword_match']
      }
    ];
  }
  
  async searchRakuten(keywords, brand, modelNumber) {
    // 楽天API統合（実装予定）
    return [];
  }
  
  async searchMercari(keywords, brand) {
    // メルカリスクレイピング（実装予定）
    return [];
  }
  
  calculateMatchingConfidence(results) {
    let totalMatches = 0;
    let weightedScore = 0;
    
    // 各プラットフォームの重み
    const weights = {
      amazon: 0.4,
      rakuten: 0.3,
      mercari: 0.2,
      yahooAuction: 0.1
    };
    
    if (results.amazonMatches.length > 0) {
      totalMatches++;
      weightedScore += weights.amazon * Math.max(...results.amazonMatches.map(m => m.matchScore || 0));
    }
    
    if (results.rakutenMatches.length > 0) {
      totalMatches++;
      weightedScore += weights.rakuten * 0.8; // 仮スコア
    }
    
    if (results.mercariMatches.length > 0) {
      totalMatches++;
      weightedScore += weights.mercari * 0.7; // 仮スコア
    }
    
    return totalMatches > 0 ? weightedScore : 0;
  }
}

// 市場トレンド分析モデル
class MarketTrendAnalysisModel {
  async analyze(productData) {
    const analysis = {
      trendScore: 5.0,
      trendDirection: 'stable',
      growthRate: 0,
      seasonality: null,
      marketMaturity: 'mature',
      influencingFactors: [],
      confidence: 0.6
    };
    
    // カテゴリ別トレンド分析
    const categoryTrend = await this.analyzeCategoryTrend(productData.ebayCategoryName);
    analysis.trendScore += categoryTrend.score;
    analysis.trendDirection = categoryTrend.direction;
    
    // ブランドトレンド分析
    const brandTrend = await this.analyzeBrandTrend(productData.brand);
    analysis.trendScore += brandTrend.score;
    
    // 季節性分析
    analysis.seasonality = this.analyzeSeasonality(productData);
    
    // Google Trends統合（実装予定）
    const googleTrends = await this.fetchGoogleTrends(productData.ebayTitle);
    if (googleTrends) {
      analysis.trendScore += googleTrends.score;
      analysis.influencingFactors.push(...googleTrends.factors);
    }
    
    // 最終スコア正規化
    analysis.trendScore = Math.max(0, Math.min(10, analysis.trendScore));
    
    return analysis;
  }
  
  async analyzeCategoryTrend(categoryName) {
    // カテゴリ別成長率（年次）
    const categoryGrowth = {
      'Consumer Electronics': { score: 1.5, direction: 'increasing' },
      'Cell Phones & Accessories': { score: 2.0, direction: 'increasing' },
      'Video Games & Consoles': { score: 1.8, direction: 'increasing' },
      'Clothing, Shoes & Accessories': { score: 0.5, direction: 'stable' },
      'Home & Garden': { score: 0.8, direction: 'stable' },
      'default': { score: 0, direction: 'stable' }
    };
    
    return categoryGrowth[categoryName] || categoryGrowth.default;
  }
  
  async analyzeBrandTrend(brand) {
    if (!brand) return { score: 0 };
    
    // ブランド人気度
    const brandPopularity = {
      'Apple': { score: 2.0 },
      'Samsung': { score: 1.5 },
      'Sony': { score: 1.2 },
      'Nintendo': { score: 1.8 },
      'default': { score: 0 }
    };
    
    return brandPopularity[brand] || brandPopularity.default;
  }
  
  analyzeSeasonality(productData) {
    const currentMonth = new Date().getMonth() + 1;
    const category = productData.ebayCategoryName || '';
    
    // 季節性パターン
    const seasonalityPatterns = {
      'Consumer Electronics': {
        peak: [11, 12, 1], // ホリデーシーズン
        season: 'winter'
      },
      'Video Games & Consoles': {
        peak: [10, 11, 12],
        season: 'winter'
      },
      'Clothing, Shoes & Accessories': {
        peak: [3, 4, 9, 10], // 季節変わり目
        season: 'transition'
      }
    };
    
    const pattern = seasonalityPatterns[category];
    if (!pattern) return null;
    
    const isCurrentSeason = pattern.peak.includes(currentMonth);
    
    return {
      season: pattern.season,
      isCurrentSeason,
      peakMonths: pattern.peak,
      seasonalityStrength: 0.7
    };
  }
  
  async fetchGoogleTrends(title) {
    // Google Trends API統合（実装予定）
    // 現在はモック実装
    return {
      score: 0.5,
      factors: ['検索トレンド安定'],
      trendData: []
    };
  }
}