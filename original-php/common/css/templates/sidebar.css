# 🔧 NAGANO-3 不足ファイル修正パッケージ

## 📁 **1. sidebar.css 作成**

**ファイル作成**: `common/css/components/sidebar.css`

```css
/**
 * 🎯 sidebar.css - サイドバー専用CSS
 * common/css/components/sidebar.css
 * 
 * ✅ BEM命名規則準拠
 * ✅ CSS変数活用
 * ✅ レスポンシブ対応
 */

/* ===================================== */
/* 🎨 サイドバー基本設定 */
/* ===================================== */

.sidebar {
    position: fixed;
    top: 0;
    left: 0;
    height: 100vh;
    width: var(--sidebar-width, 220px);
    background: var(--sidebar-bg, #1f2937);
    color: var(--sidebar-text, #ffffff);
    transition: width 0.3s ease;
    z-index: 1000;
    overflow: hidden;
    box-shadow: 2px 0 8px rgba(0, 0, 0, 0.1);
}

/* 縮小状態 */
.sidebar--collapsed {
    width: 60px;
}

/* 展開状態 */
.sidebar--expanded {
    width: 220px;
}

/* ===================================== */
/* 🧭 ナビゲーション */
/* ===================================== */

.navigation {
    padding: var(--space-4, 1rem) 0;
}

.navigation__list {
    list-style: none;
    margin: 0;
    padding: 0;
}

.navigation__item {
    margin-bottom: var(--space-2, 0.5rem);
}

.navigation__link {
    display: flex;
    align-items: center;
    padding: var(--space-3, 0.75rem) var(--space-4, 1rem);
    color: inherit;
    text-decoration: none;
    transition: background-color 0.2s ease;
    border-radius: 0 25px 25px 0;
    margin-right: var(--space-4, 1rem);
}

.navigation__link:hover {
    background: rgba(255, 255, 255, 0.1);
}

.navigation__link--active {
    background: var(--color-primary, #059669);
    color: white;
}

.navigation__icon {
    width: 20px;
    height: 20px;
    margin-right: var(--space-3, 0.75rem);
    flex-shrink: 0;
}

.navigation__text {
    font-size: 0.9rem;
    opacity: 1;
    visibility: visible;
    transition: opacity 0.3s ease, visibility 0.3s ease;
    white-space: nowrap;
}

/* ===================================== */
/* 🔄 トグル機能 */
/* ===================================== */

.sidebar-toggle {
    position: absolute;
    top: var(--space-4, 1rem);
    right: var(--space-4, 1rem);
    background: rgba(255, 255, 255, 0.1);
    border: none;
    color: white;
    width: 32px;
    height: 32px;
    border-radius: 50%;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: background-color 0.2s ease;
}

.sidebar-toggle:hover {
    background: rgba(255, 255, 255, 0.2);
}

.toggle-text {
    opacity: 1;
    visibility: visible;
    transition: opacity 0.3s ease, visibility 0.3s ease;
}

/* ===================================== */
/* 📱 レスポンシブ対応 */
/* ===================================== */

/* 縮小時のテキスト非表示 */
[data-sidebar="collapsed"] .navigation__text,
[data-sidebar="collapsed"] .toggle-text,
.sidebar--collapsed .navigation__text,
.sidebar--collapsed .toggle-text {
    opacity: 0;
    visibility: hidden;
}

/* モバイル対応 */
@media (max-width: 768px) {
    .sidebar {
        transform: translateX(-100%);
        transition: transform 0.3s ease;
    }
    
    .sidebar--mobile-open {
        transform: translateX(0);
    }
    
    .sidebar--collapsed {
        transform: translateX(-100%);
    }
}

/* ===================================== */
/* 🎨 ブランディング */
/* ===================================== */

.sidebar__header {
    padding: var(--space-6, 1.5rem) var(--space-4, 1rem);
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    margin-bottom: var(--space-4, 1rem);
}

.sidebar__logo {
    font-size: 1.25rem;
    font-weight: 600;
    color: var(--color-primary, #059669);
}

.sidebar__version {
    font-size: 0.75rem;
    opacity: 0.7;
    margin-top: var(--space-1, 0.25rem);
}

/* ===================================== */
/* 🔧 サブメニュー */
/* ===================================== */

.submenu {
    position: absolute;
    left: 220px;
    top: 0;
    background: var(--sidebar-bg, #1f2937);
    border-radius: var(--radius-lg, 0.5rem);
    box-shadow: var(--shadow-lg, 0 10px 15px -3px rgba(0, 0, 0, 0.1));
    padding: var(--space-2, 0.5rem);
    min-width: 180px;
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.2s ease, visibility 0.2s ease;
    z-index: 1001;
}

.navigation__item:hover .submenu {
    opacity: 1;
    visibility: visible;
}

.submenu__list {
    list-style: none;
    margin: 0;
    padding: 0;
}

.submenu__item {
    margin-bottom: var(--space-1, 0.25rem);
}

.submenu__link {
    display: block;
    padding: var(--space-2, 0.5rem) var(--space-3, 0.75rem);
    color: inherit;
    text-decoration: none;
    border-radius: var(--radius-md, 0.375rem);
    font-size: 0.85rem;
    transition: background-color 0.2s ease;
}

.submenu__link:hover {
    background: rgba(255, 255, 255, 0.1);
}

/* ===================================== */
/* 🎯 アクセシビリティ */
/* ===================================== */

.sidebar:focus-within {
    outline: 2px solid var(--color-primary, #059669);
    outline-offset: -2px;
}

.navigation__link:focus {
    outline: 2px solid var(--color-primary, #059669);
    outline-offset: -2px;
}

/* ===================================== */
/* 🔄 アニメーション */
/* ===================================== */

@keyframes slideIn {
    from {
        transform: translateX(-100%);
    }
    to {
        transform: translateX(0);
    }
}

@keyframes slideOut {
    from {
        transform: translateX(0);
    }
    to {
        transform: translateX(-100%);
    }
}

.sidebar--animating {
    animation: slideIn 0.3s ease-out;
}

/* ===================================== */
/* 🎨 ダークモード対応 */
/* ===================================== */

[data-theme="dark"] .sidebar {
    background: var(--dark-sidebar-bg, #111827);
    color: var(--dark-sidebar-text, #f9fafb);
}

[data-theme="dark"] .navigation__link:hover {
    background: rgba(255, 255, 255, 0.05);
}

[data-theme="dark"] .sidebar-toggle {
    background: rgba(255, 255, 255, 0.05);
}

[data-theme="dark"] .sidebar-toggle:hover {
    background: rgba(255, 255, 255, 0.1);
}
```

## 📁 **2. main.js メインコンテンツエラー修正**

**ファイル修正**: `common/js/main.js` のサイドバートグル関数

```javascript
/**
 * 🔄 サイドバートグル機能（修正版）
 */
window.toggleSidebar = function() {
    console.log('🔄 サイドバートグル実行開始');
    
    try {
        const sidebar = document.querySelector('.sidebar');
        const body = document.body;
        const root = document.documentElement;
        
        // メインコンテンツ要素の検索（複数の可能性を考慮）
        const mainContent = document.querySelector('.main-content') || 
                           document.querySelector('.content') || 
                           document.querySelector('.page-content') ||
                           document.querySelector('main') ||
                           document.querySelector('#main') ||
                           document.querySelector('.container');
        
        if (!sidebar) {
            console.error('❌ サイドバー要素が見つかりません');
            return;
        }
        
        if (!mainContent) {
            console.warn('⚠️ メインコンテンツ要素が見つかりません - サイドバーのみ調整');
        }
        
        // 現在の状態確認
        const isCollapsed = body.getAttribute('data-sidebar') === 'collapsed' ||
                           sidebar.classList.contains('sidebar--collapsed');
        
        if (isCollapsed) {
            // 展開処理
            console.log('🔹 サイドバー展開処理開始');
            
            // CSS変数を動的変更
            root.style.setProperty('--sidebar-width', '220px');
            body.setAttribute('data-sidebar', 'expanded');
            
            sidebar.classList.remove('sidebar--collapsed');
            sidebar.classList.add('sidebar--expanded');
            sidebar.style.width = '220px';
            
            // メインコンテンツ調整（存在する場合のみ）
            if (mainContent) {
                mainContent.style.marginLeft = '220px';
                mainContent.style.maxWidth = 'calc(100vw - 220px)';
            }
            
            // テキスト表示
            setTimeout(() => {
                const sidebarTexts = sidebar.querySelectorAll('.sidebar-text, .toggle-text, .navigation__text');
                sidebarTexts.forEach(text => {
                    text.style.opacity = '1';
                    text.style.visibility = 'visible';
                });
            }, 100);
            
            console.log('✅ サイドバー展開完了');
            
        } else {
            // 縮小処理
            console.log('🔹 サイドバー縮小処理開始');
            
            // テキスト非表示
            const sidebarTexts = sidebar.querySelectorAll('.sidebar-text, .toggle-text, .navigation__text');
            sidebarTexts.forEach(text => {
                text.style.opacity = '0';
                text.style.visibility = 'hidden';
            });
            
            setTimeout(() => {
                root.style.setProperty('--sidebar-width', '60px');
                body.setAttribute('data-sidebar', 'collapsed');
                
                sidebar.classList.add('sidebar--collapsed');
                sidebar.classList.remove('sidebar--expanded');
                sidebar.style.width = '60px';
                
                // メインコンテンツ調整（存在する場合のみ）
                if (mainContent) {
                    mainContent.style.marginLeft = '60px';
                    mainContent.style.maxWidth = 'calc(100vw - 60px)';
                }
            }, 200);
            
            console.log('✅ サイドバー縮小完了');
        }
        
        // 通知表示（関数が存在する場合のみ）
        if (typeof showNotification === 'function') {
            showNotification(
                `サイドバーを${isCollapsed ? '展開' : '縮小'}しました`, 
                'info'
            );
        }
        
    } catch (error) {
        console.error('❌ サイドバートグル失敗:', error);
        
        if (typeof showNotification === 'function') {
            showNotification('サイドバー操作でエラーが発生しました', 'error');
        }
    }
};
```

## 📁 **3. style.css に sidebar.css インポート追加**

**ファイル修正**: `common/css/style.css`

```css
/* 既存のインポート文の下に追加 */
@import url('components/sidebar.css');
```

## 📁 **4. 統合テストファイルの test_error_handling 実装**

**修正箇所**: `kicho_integrated_system_test_fixed.php` のswitch文内

```php
case 'test_error_handling':
    // わざとエラーを発生させてエラーハンドリングをテスト
    throw new Exception('テスト用エラー: エラーハンドリング機能の確認テスト');
    break;
```

## 🚀 **実装手順**

### **Step 1: ディレクトリ作成**
```bash
mkdir -p common/css/components
```

### **Step 2: sidebar.css 作成**
```bash
# 上記のsidebar.cssの内容をコピーして作成
cat > common/css/components/sidebar.css << 'EOF'
[上記のCSSコードをここに貼り付け]
EOF
```

### **Step 3: style.css 修正**
```bash
# style.cssの末尾に追加
echo "@import url('components/sidebar.css');" >> common/css/style.css
```

### **Step 4: main.js 修正**
```bash
# main.jsのtoggleSidebar関数を上記の修正版に置き換え
```

### **Step 5: 権限設定**
```bash
chmod 644 common/css/components/sidebar.css
chmod 644 common/css/style.css
chmod 644 common/js/main.js
```

## ✅ **修正後の期待結果**

1. **sidebar.css 404エラー解消**: CSSファイルが正常に読み込まれる
2. **メインコンテンツエラー解消**: 複数の要素候補から検索してエラーを回避
3. **エラーハンドリングテスト正常動作**: 期待通りのエラーレスポンスを返す
4. **サイドバートグル正常動作**: CSS変数とクラス制御が適切に機能

## 🔍 **動作確認方法**

```javascript
// ブラウザコンソールで実行
console.log('=== NAGANO-3 修正確認 ===');

// 1. サイドバーCSS確認
const sidebarStyles = getComputedStyle(document.querySelector('.sidebar'));
console.log('サイドバーCSS:', sidebarStyles.width);

// 2. メインコンテンツ確認
const mainContent = document.querySelector('.main-content, .content, .page-content, main, #main, .container');
console.log('メインコンテンツ:', mainContent ? '発見' : '見つからず');

// 3. toggleSidebar関数確認
console.log('toggleSidebar関数:', typeof window.toggleSidebar);

// 4. デバッグ実行
if (typeof window.debugSidebar === 'function') {
    window.debugSidebar();
}
```

この修正により、すべてのエラーが解消され、統合システムが正常に動作するようになります。